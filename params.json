{"name":"Zekyll","tagline":"Thinking in static file generators","body":"# Zekyll\r\n\r\nStatic file generators come in more than ten languages. What you choose depends on your comfort, your taste, whether you're a developer or a designer. \r\n\r\nI recommend javascript and ruby toolkits. I think they're simple, designer friendly, and are backed by a thriving community who care about the web. \r\n\r\nIn this POC, I compiled a list of toolkits with several languages, mostly for fun and learning. They are by no means the best; I just like them, that is all. If I had more time I'd include more.\r\n\r\n## What I talk about when I talk about static sites\r\n\r\n> A toolkit that pre-processes static assets (css, images), content, templates, and simple logic between them in order to generate a custom website.\r\n\r\nThis makes the site lightening *fast*. \r\n\r\nWhen you don't have a database, a server computing or rendering pages or data, when you can use the global delivery of a CDN to optimize and cache files like images, when you don't worry about css attacks (hackers hate static sites), let me tell me you, a site with pure static assets will roar.\r\n\r\nServers love them. They do: they serve them for free. The best things in life are better when they're free. Think Sex.\r\n\r\nYou can classify the toolkits into the following:\r\n\r\n**Small**\r\n\r\nThe Minimalist, ascetic. No sex. \r\n\r\nLogic-less, file based.\r\n\r\nBest for users getting rid of cms in search of simplicity.\r\n\r\nExamples: \r\n\r\n- Git: [Toto](http://cloudhead.io/toto)\r\n- Javascript: [Wintersmith](http://wintersmith.io)\r\n\r\n**Medium**\r\n\r\nSimple, yet flexible with limited options. Sex is fine with some strings attached.\r\n\r\nMost popular in this category as they solve 80% of your problems.\r\n\r\nBest for designers and developers who are comfortable with basic programming skills.\r\n\r\nExamples: \r\n\r\n- Ruby: [Jekyll*](http://jekyllrb.com)\r\n- Python: [Frozen-Flask](http://pythonhosted.org/Frozen-Flask/), [Liquidluck](http://lab.lepture.com/liquidluck/)\r\n- Javascript: [Hammer](http://malarkey.github.io/Rock-Hammer)\r\n\r\n**Large**\r\n\r\nFullstack, free love included, no strings attached. Think of the 60s.\r\n\r\nCovers a wide range of workflows templates, markups, pre-processors that hack the hell out of your content with helpers and plugins.\r\n\r\nBest for programmers getting ready for the leap.\r\n\r\nExamples: \r\n\r\n- Ruby: [Middleman](http://middlemanapp.com) \r\n- Python: [Hyde](http://ringce.com/hyde) \r\n- Javascript: [Docpad*](http://docpad.org)\r\n\r\n---    \r\n\r\n## A Designer's workflow\r\n\r\nI think?\r\n\r\nWrite html, css, and templates. \r\n\r\nThings have improved since 1996; there's a better way: *Pre-processors*.\r\n\r\nInstead of HTML, use *Markdown, HAML, Slim*. \r\n\r\nInstead of repeating HTML, use Templates like *Jade*. \r\n\r\nPlain old CSS is so 1999--use *Less, Stylus, SCSS, Compass, Bourbon mixins*. \r\n\r\nNot everyone likes Javascript, use *Coffescript*.\r\n\r\nDesigners can choose a Ruby or a Python stack:\r\n\r\nRuby stack:\r\n\r\n- html: haml, slim\r\n- templates: handlebars\r\n- css: sass, compass\r\n- grids: h5bp, susy\r\n- gen: middleman\r\n\r\n\r\nJavascript stack:\r\n\r\n- html: jade, handlebars, coffeekup\r\n- css: less, stylus\r\n- grids: bootstrap, cofeescript\r\n- gen: node, docpad\r\n\r\n---\r\n\r\n## References\r\n\r\n1. [The mother of all lists](http://nanoc.ws/about/)\r\n2. [32 Static Website Generators](https://iwantmyname.com/blog/2011/02/list-static-website-generators.html)\r\n3. [Hacking up sites with Middleman](http://darrenknewton.com/2012/09/16/hacking-up-sites-with-middleman/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}